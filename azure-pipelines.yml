# CI/CD para TP05 (Node.js: frontend + backend) + Deploy a QA

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # CI
  nodeVersion: '20.x'
  artifactNameFrontend: 'frontend'
  artifactNameBackend: 'backend'
  # CD
  azureServiceConnection: 'azure-tp05-connection'   # <— Service Connection
  webAppQa: 'webapp-tp05-qa-treachi'                # <— Web App QA
  webAppQaHost: 'webapp-tp05-qa-treachi-f4etatd8fmaydhex.eastus2-01.azurewebsites.net'  # <— Host Web App QA

stages:
# =======================
# CI: Build & Package
# =======================
- stage: Build
  displayName: 'Build & Package'
  jobs:
  - job: BuildJob
    displayName: 'Build front + package back'
    steps:
    - checkout: self

    # --- Node.js tool ---
    - task: NodeTool@0
      displayName: 'Use Node $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'

    # --- FRONTEND ---
    - script: |
        cd frontend
        npm ci
        npm run build
      displayName: 'Install & Build Frontend'

    - task: ArchiveFiles@2
      displayName: 'Archive frontend dist'
      inputs:
        rootFolderOrFile: 'frontend/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        replaceExistingArchive: true

    # --- BACKEND ---
    - script: |
        set -e
        cd backend
        npm ci
        if npm run | grep -qE '^\s*build'; then
          npm run build
        fi
        cd ..
        rm -rf out_backend && mkdir -p out_backend
        rsync -av --exclude node_modules --exclude tests --exclude coverage backend/ out_backend/
      displayName: 'Install backend deps & prepare package (no node_modules)'

    - task: ArchiveFiles@2
      displayName: 'Archive backend'
      inputs:
        rootFolderOrFile: 'out_backend'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        replaceExistingArchive: true

    # Publicar artefactos (front/back) para CD
    - task: PublishBuildArtifacts@1
      displayName: 'Publish frontend artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        ArtifactName: '$(artifactNameFrontend)'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish backend artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend.zip'
        ArtifactName: '$(artifactNameBackend)'
        publishLocation: 'Container'

# =======================
# CD: Deploy a QA
# =======================
- stage: DeployQA
  displayName: 'Deploy to QA'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployQAJob
    displayName: 'Deploy to QA'
    environment: 'QA'   # Debe existir el Environment QA en DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          # Despliegue del backend.zip al App Service QA
          - task: AzureWebApp@1
            displayName: 'Deploy backend.zip to QA Web App'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(webAppQa)'
              package: '$(Pipeline.Workspace)/artifacts/$(artifactNameBackend)/backend.zip'
